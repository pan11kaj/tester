{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Pc\\\\Downloads\\\\Product tester\\\\product-tester\\\\Screens\\\\OnlineProduct.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { Header } from 'react-native-elements';\n\nvar OP = function (_React$Component) {\n  _inherits(OP, _React$Component);\n\n  var _super = _createSuper(OP);\n\n  function OP() {\n    var _this;\n\n    _classCallCheck(this, OP);\n\n    _this = _super.call(this);\n\n    _this.hs = function () {\n      _this.props.navigation.navigate('HomeScreen');\n    };\n\n    _this.getdata = function () {\n      var allrating = _this.state.rating;\n      var buy = _this.state.allbuy;\n      var allsellerrating = _this.state.sellerrating;\n\n      if (allrating <= '3.5' && allrating >= '2.5') {\n        _this.setState({\n          getquality: 'not worth of purchase'\n        });\n      }\n\n      if (allrating <= '2.5' && allrating >= '1') {\n        _this.setState({\n          getquality: 'bad quality'\n        });\n      }\n\n      if (allrating > '3.5' && allrating < '4.5') {\n        _this.setState({\n          getquality: 'good product'\n        });\n      }\n\n      if (allrating === '4.5') {\n        _this.setState({\n          getquality: 'better product'\n        });\n      }\n\n      if (allrating === '5') {\n        _this.setState({\n          getquality: 'best product'\n        });\n      }\n\n      if (allrating > '5' || allrating < '1' || allsellerrating > '5' || allsellerrating < '1') {\n        _this.setState({\n          warning: 'please define only 1 to 5* rating',\n          getquality: 'undefined',\n          productis: 'undefined'\n        });\n      }\n\n      if (allsellerrating <= '4.5' && allsellerrating > '3.5') {\n        _this.setState({\n          productis: ' 80% chances real'\n        });\n      }\n\n      if (allsellerrating <= '3.5' && allsellerrating >= '1') {\n        _this.setState({\n          productis: '30% chances real'\n        });\n      }\n\n      if (allsellerrating === '5') {\n        _this.setState({\n          productis: '99% chances real great'\n        });\n      }\n\n      if (buy <= '100' || buy <= '99' && allsellerrating <= '3.5' && allrating <= '3.5') {\n        _this.setState({\n          shouldbuy: 'NO'\n        });\n      } else {\n        _this.setState({\n          shouldbuy: 'YES'\n        });\n      }\n    };\n\n    _this.state = {\n      rating: '',\n      sellerrating: '',\n      allbuy: '',\n      getquality: '',\n      productis: '',\n      warning: '',\n      shouldbuy: ''\n    };\n    console.log(_this.state.youbuy);\n    return _this;\n  }\n\n  _createClass(OP, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 7\n        }\n      }, React.createElement(Header, {\n        centerComponent: {\n          text: 'online products tester',\n          style: {\n            backgroundColor: 'red',\n            fontSize: 18,\n            color: '#ffffff'\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }\n      }), React.createElement(TouchableOpacity, {\n        onPress: this.hs,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }\n      }, React.createElement(Image, {\n        style: {\n          width: 50,\n          height: 50\n        },\n        source: require(\"../93634.png\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }\n      })), React.createElement(Text, {\n        style: {\n          textAlign: 'center',\n          color: '#FFFF00'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 9\n        }\n      }, \"enter product rating:-\"), React.createElement(TextInput, {\n        style: styles.inputs,\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            rating: text\n          });\n        },\n        value: this.state.rating,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }\n      }), React.createElement(Text, {\n        style: {\n          textAlign: 'center',\n          color: '#FFFF00'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 9\n        }\n      }, \"enter Seller rating:-\"), React.createElement(TextInput, {\n        style: styles.inputs,\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            sellerrating: text\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 9\n        }\n      }), React.createElement(Text, {\n        style: {\n          textAlign: 'center',\n          color: '#FFFF00'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 9\n        }\n      }, \"total purcahsing product:-\"), React.createElement(TextInput, {\n        style: styles.inputs,\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            allbuy: text\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 9\n        }\n      }), React.createElement(TouchableOpacity, {\n        style: styles.button,\n        onPress: this.getdata,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: 'white'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }\n      }, \"lets check\")), React.createElement(Text, {\n        style: {\n          fontSize: 20,\n          textAlign: 'center',\n          color: 'red'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 9\n        }\n      }, this.state.warning), React.createElement(Text, {\n        style: styles.outputs,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 9\n        }\n      }, \"product quality:-\", this.state.getquality), React.createElement(Text, {\n        style: styles.outputs,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 9\n        }\n      }, \"The product is:-\", this.state.productis), React.createElement(Text, {\n        style: styles.outputs,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 9\n        }\n      }, \"should you buy:-\", this.state.shouldbuy), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 9\n        }\n      }, \"*Note:-if you define a letter value So the app not working define only number value.\"));\n    }\n  }]);\n\n  return OP;\n}(React.Component);\n\nexport { OP as default };\nvar styles = StyleSheet.create({\n  inputs: {\n    width: 190,\n    height: 30,\n    borderBottomColor: 'white',\n    borderLeftColor: 'blue',\n    borderWidth: 3,\n    borderRightColor: 'blue',\n    borderTopColor: 'white',\n    alignSelf: 'center',\n    textAlign: 'center',\n    marginTop: 10\n  },\n  button: {\n    borderColor: 'blue',\n    alignSelf: 'center',\n    width: 80,\n    backgroundColor: 'green',\n    textAlign: 'center',\n    borderRadius: 30\n  },\n  outputs: {\n    color: 'blue',\n    fontSize: 20,\n    fontFamily: 'fantasy'\n  }\n});","map":{"version":3,"sources":["C:/Users/Pc/Downloads/Product tester/product-tester/Screens/OnlineProduct.js"],"names":["React","Header","OP","hs","props","navigation","navigate","getdata","allrating","state","rating","buy","allbuy","allsellerrating","sellerrating","setState","getquality","warning","productis","shouldbuy","console","log","youbuy","text","style","backgroundColor","fontSize","color","width","height","require","textAlign","styles","inputs","button","outputs","Component","StyleSheet","create","borderBottomColor","borderLeftColor","borderWidth","borderRightColor","borderTopColor","alignSelf","marginTop","borderColor","borderRadius","fontFamily"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  Text,\r\n  View,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  Image,\r\n  TextInput,\r\n} from 'react-native';\r\nimport { Header } from 'react-native-elements';\r\n\r\nexport default class OP extends React.Component {\r\n  hs = () => {\r\n    this.props.navigation.navigate('HomeScreen');\r\n  };\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      rating: '',\r\n      sellerrating: '',\r\n      allbuy: '',\r\n      getquality: '',\r\n      productis: '',\r\n      warning: '',\r\n     shouldbuy:''\r\n    };\r\n    console.log(this.state.youbuy)\r\n  }\r\n  getdata = () => {\r\n    var allrating = this.state.rating;\r\n    var buy = this.state.allbuy\r\n    var allsellerrating = this.state.sellerrating;\r\n    if (allrating <= '3.5' && allrating >= '2.5') {\r\n      this.setState({ getquality: 'not worth of purchase' });\r\n    }\r\n    if (allrating <= '2.5' && allrating >= '1') {\r\n      this.setState({ getquality: 'bad quality' });\r\n    }\r\n    if (allrating > '3.5' && allrating < '4.5') {\r\n      this.setState({ getquality: 'good product' });\r\n    }\r\n    if (allrating === '4.5') {\r\n      this.setState({ getquality: 'better product' });\r\n    }\r\n    if (allrating === '5') {\r\n      this.setState({ getquality: 'best product' });\r\n    }\r\n    if (\r\n      allrating > '5' ||\r\n      allrating < '1' ||\r\n      allsellerrating > '5' ||\r\n      allsellerrating < '1'\r\n    ) {\r\n      this.setState({\r\n           warning:'please define only 1 to 5* rating',\r\n        getquality: 'undefined',\r\n        productis: 'undefined',\r\n      });\r\n    }\r\n    if (allsellerrating <= '4.5' && allsellerrating > '3.5') {\r\n      this.setState({ productis: ' 80% chances real' });\r\n    }\r\n    if (allsellerrating <= '3.5' && allsellerrating >= '1') {\r\n      this.setState({ productis: '30% chances real' });\r\n    }\r\n    if (allsellerrating === '5') {\r\n      this.setState({ productis: '99% chances real great' });\r\n    }\r\n    if(buy<='100' || buy<='99' && allsellerrating<='3.5' && allrating<='3.5'){\r\n      this.setState({shouldbuy:'NO'})\r\n    }else{\r\n      this.setState({shouldbuy:'YES'})\r\n    }\r\n    \r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <View>\r\n        <Header\r\n          centerComponent={{\r\n            text: 'online products tester',\r\n            style: { backgroundColor: 'red', fontSize: 18, color: '#ffffff' },\r\n          }}\r\n        />\r\n        <TouchableOpacity onPress={this.hs}>\r\n          <Image\r\n            style={{ width: 50, height: 50 }}\r\n            source={require('../93634.png')}\r\n          />\r\n        </TouchableOpacity>\r\n        <Text style={{ textAlign: 'center', color: '#FFFF00' }}>\r\n          enter product rating:-\r\n        </Text>\r\n        <TextInput\r\n          style={styles.inputs}\r\n          onChangeText={(text) => {\r\n            this.setState({\r\n              rating: text,\r\n            });\r\n          }}\r\n          value={this.state.rating}\r\n        />\r\n        <Text style={{ textAlign: 'center', color: '#FFFF00' }}>\r\n          enter Seller rating:-\r\n        </Text>\r\n        <TextInput\r\n          style={styles.inputs}\r\n          onChangeText={(text) => {\r\n            this.setState({\r\n              sellerrating: text,\r\n            });\r\n          }}\r\n        />\r\n        <Text style={{ textAlign: 'center', color: '#FFFF00' }}>\r\n          total purcahsing product:-\r\n        </Text>\r\n        <TextInput\r\n          style={styles.inputs}\r\n          onChangeText={(text) => {\r\n            this.setState({\r\n              allbuy: text,\r\n            });\r\n          }}\r\n        />\r\n\r\n        <TouchableOpacity style={styles.button} onPress={this.getdata}>\r\n          <Text style={{ color: 'white' }}>lets check</Text>\r\n        </TouchableOpacity>\r\n        <Text style={{ fontSize:20, textAlign: 'center', color: 'red' }}>\r\n          {this.state.warning}\r\n        </Text>\r\n\r\n        <Text style={styles.outputs}>\r\n          product quality:-{this.state.getquality}\r\n        </Text>\r\n        <Text style={styles.outputs}>\r\n          The product is:-{this.state.productis}\r\n        </Text>\r\n        <Text style={styles.outputs}>should you buy:-{this.state.shouldbuy}</Text>\r\n        <Text>\r\n          *Note:-if you define a letter value So the app not working define only\r\n          number value.\r\n        </Text>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  inputs: {\r\n    width: 190,\r\n    height: 30,\r\n    borderBottomColor: 'white',\r\n    borderLeftColor: 'blue',\r\n    borderWidth: 3,\r\n    borderRightColor: 'blue',\r\n    borderTopColor: 'white',\r\n    alignSelf: 'center',\r\n    textAlign: 'center',\r\n    marginTop: 10,\r\n  },\r\n  button: {\r\n    borderColor: 'blue',\r\n    alignSelf: 'center',\r\n    width: 80,\r\n    backgroundColor: 'green',\r\n    textAlign: 'center',\r\n    borderRadius: 30,\r\n  },\r\n  outputs: {\r\n    color: 'blue',\r\n    fontSize: 20,\r\n    fontFamily: 'fantasy',\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}